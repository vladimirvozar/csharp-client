/* 
 * Nordea Account Information Services API v3
 *
 * Open Banking API
 *
 * OpenAPI spec version: 2.2.0-SNAPSHOT
 * Contact: support@nordeaopenbanking.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = IO.Swagger.Client.SwaggerDateConverter;

namespace IO.Swagger.Model
{
    /// <summary>
    /// External response header
    /// </summary>
    [DataContract]
    public partial class ExternalResponseHeaderV3 :  IEquatable<ExternalResponseHeaderV3>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ExternalResponseHeaderV3" /> class.
        /// </summary>
        /// <param name="creationDateTime">Response creation time.</param>
        /// <param name="httpCode">HTTP code for response.</param>
        /// <param name="messageIdentification">Original request id for correlation purposes.</param>
        /// <param name="messagePagination">Details of paginated response.</param>
        public ExternalResponseHeaderV3(DateTime? creationDateTime = default(DateTime?), int? httpCode = default(int?), string messageIdentification = default(string), PaginationV2 messagePagination = default(PaginationV2))
        {
            this.CreationDateTime = creationDateTime;
            this.HttpCode = httpCode;
            this.MessageIdentification = messageIdentification;
            this.MessagePagination = messagePagination;
        }
        
        /// <summary>
        /// Response creation time
        /// </summary>
        /// <value>Response creation time</value>
        [DataMember(Name="creation_date_time", EmitDefaultValue=false)]
        public DateTime? CreationDateTime { get; set; }

        /// <summary>
        /// HTTP code for response
        /// </summary>
        /// <value>HTTP code for response</value>
        [DataMember(Name="http_code", EmitDefaultValue=false)]
        public int? HttpCode { get; set; }

        /// <summary>
        /// Original request id for correlation purposes
        /// </summary>
        /// <value>Original request id for correlation purposes</value>
        [DataMember(Name="message_identification", EmitDefaultValue=false)]
        public string MessageIdentification { get; set; }

        /// <summary>
        /// Details of paginated response
        /// </summary>
        /// <value>Details of paginated response</value>
        [DataMember(Name="message_pagination", EmitDefaultValue=false)]
        public PaginationV2 MessagePagination { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class ExternalResponseHeaderV3 {\n");
            sb.Append("  CreationDateTime: ").Append(CreationDateTime).Append("\n");
            sb.Append("  HttpCode: ").Append(HttpCode).Append("\n");
            sb.Append("  MessageIdentification: ").Append(MessageIdentification).Append("\n");
            sb.Append("  MessagePagination: ").Append(MessagePagination).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as ExternalResponseHeaderV3);
        }

        /// <summary>
        /// Returns true if ExternalResponseHeaderV3 instances are equal
        /// </summary>
        /// <param name="input">Instance of ExternalResponseHeaderV3 to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(ExternalResponseHeaderV3 input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.CreationDateTime == input.CreationDateTime ||
                    (this.CreationDateTime != null &&
                    this.CreationDateTime.Equals(input.CreationDateTime))
                ) && 
                (
                    this.HttpCode == input.HttpCode ||
                    (this.HttpCode != null &&
                    this.HttpCode.Equals(input.HttpCode))
                ) && 
                (
                    this.MessageIdentification == input.MessageIdentification ||
                    (this.MessageIdentification != null &&
                    this.MessageIdentification.Equals(input.MessageIdentification))
                ) && 
                (
                    this.MessagePagination == input.MessagePagination ||
                    (this.MessagePagination != null &&
                    this.MessagePagination.Equals(input.MessagePagination))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.CreationDateTime != null)
                    hashCode = hashCode * 59 + this.CreationDateTime.GetHashCode();
                if (this.HttpCode != null)
                    hashCode = hashCode * 59 + this.HttpCode.GetHashCode();
                if (this.MessageIdentification != null)
                    hashCode = hashCode * 59 + this.MessageIdentification.GetHashCode();
                if (this.MessagePagination != null)
                    hashCode = hashCode * 59 + this.MessagePagination.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
