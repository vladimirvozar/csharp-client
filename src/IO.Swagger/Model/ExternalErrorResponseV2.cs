/* 
 * Nordea Account Information Services API v3
 *
 * Open Banking API
 *
 * OpenAPI spec version: 2.2.0-SNAPSHOT
 * Contact: support@nordeaopenbanking.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = IO.Swagger.Client.SwaggerDateConverter;

namespace IO.Swagger.Model
{
    /// <summary>
    /// ExternalErrorResponseV2
    /// </summary>
    [DataContract]
    public partial class ExternalErrorResponseV2 : ExternalErrorResponse,  IEquatable<ExternalErrorResponseV2>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ExternalErrorResponseV2" /> class.
        /// </summary>
        /// <param name="error">Payload.</param>
        /// <param name="groupHeader">Standard format response header.</param>
        public ExternalErrorResponseV2(ExternalErrorV2 error = default(ExternalErrorV2), ExternalResponseHeaderV3 groupHeader = default(ExternalResponseHeaderV3)) : base()
        {
            this.Error = error;
            this.GroupHeader = groupHeader;
        }
        
        /// <summary>
        /// Payload
        /// </summary>
        /// <value>Payload</value>
        [DataMember(Name="error", EmitDefaultValue=false)]
        public ExternalErrorV2 Error { get; set; }

        /// <summary>
        /// Standard format response header
        /// </summary>
        /// <value>Standard format response header</value>
        [DataMember(Name="groupHeader", EmitDefaultValue=false)]
        public ExternalResponseHeaderV3 GroupHeader { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class ExternalErrorResponseV2 {\n");
            sb.Append("  ").Append(base.ToString().Replace("\n", "\n  ")).Append("\n");
            sb.Append("  Error: ").Append(Error).Append("\n");
            sb.Append("  GroupHeader: ").Append(GroupHeader).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public override string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as ExternalErrorResponseV2);
        }

        /// <summary>
        /// Returns true if ExternalErrorResponseV2 instances are equal
        /// </summary>
        /// <param name="input">Instance of ExternalErrorResponseV2 to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(ExternalErrorResponseV2 input)
        {
            if (input == null)
                return false;

            return base.Equals(input) && 
                (
                    this.Error == input.Error ||
                    (this.Error != null &&
                    this.Error.Equals(input.Error))
                ) && base.Equals(input) && 
                (
                    this.GroupHeader == input.GroupHeader ||
                    (this.GroupHeader != null &&
                    this.GroupHeader.Equals(input.GroupHeader))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = base.GetHashCode();
                if (this.Error != null)
                    hashCode = hashCode * 59 + this.Error.GetHashCode();
                if (this.GroupHeader != null)
                    hashCode = hashCode * 59 + this.GroupHeader.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            foreach(var x in BaseValidate(validationContext)) yield return x;
            yield break;
        }
    }

}
